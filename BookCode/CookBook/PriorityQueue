import queue 
import threading 
import time

exitFlag = 0

class myThred(threading.Thread):

    def __init__(self, threadID, name, q):

        threading.Thread.__init__(self)
        self.threadID = threadID
        self.name = name
        self.q = q

    def run(self):

        print("start process" + self.name)
        precess_data(self.name, slef.q)
        print ("exit process" + self.name)

def process_data(threadName, q):
    while not exitFlag:
        queueLock.acquire()
        if not workQueue.empty():
            data = q.get()
            quueLock.release()
            print("%s processing %s" %(threadName, data))

        else:
            queueLock.release()
        
        time.sleep()

threadList = ["Thread-1", "Thread-2", "Thread-3"]
nameList = ["one", "Two", "Three", "Four", "Five"]
queueLock = threading.Lock()
workQueue = queue.Queue(10)
threads =[]
threadID = 1

for tName in threadList:
    thread = myThread(threadId, tName, workQueue)
    thread.start()
    threads.append(thread)
    threadID += 1


queueLock.acquire()

for word in nameList:
    workQueue.put(word)

queueLock.release()

while not workQueue.empty():
    pass

exitFlag = 1

for t in threads:
    t.join()

print("exit main process")


?????Thread-1
?????Thread-2
?????Thread-3
Thread-3 processing One
Thread-1 processing Two
Thread-2 processing Three
Thread-3 processing Four
Thread-1 processing Five
?????Thread-3
?????Thread-2
?????Thread-1
????
