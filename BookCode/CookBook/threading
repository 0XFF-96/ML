import threading 
import time

exitFlag = 0 

class myThread (threading.Thread):

    def __init__(self, threadID, name, counter):

        threading.Thread.__init__(self)
        self.threadID = threadID
        self.name = name
        self.counter = counter

    def run(self):

        print("start process" + self.name)
        print_time(self.name, self.counter, 5)
        print('eixt process' + self.name)


def print_time(threadName, delay, counter):

    while counter:
        if exitFlag:
            threadName.exit()
        time.sleep(delay)

        print("S:%s" %(threadName, time.ctime(time.time())))
        counter -= 1

thread1 = myThread(1, "Thread-1", 1)
thread2 = myThread(1, "Thread-2", 2)

>>>>>>>>>>>>>>>>

import threading 
import time

class myThread(threading.Thread):

    def __init__(self, threadID, name, counter):
        threading.Thread.__init__(self)
        self.threadID = threadID
        self.name = name
        self.counter = counter

    def run(self):
        print("start" + self.name)
        threadLock.acquire()
        print_time(self.name, self.counter, 3)
        threadLock.release()

def print_time(threadName, delay, counter):
    while counter:
        time.sleep(delay)
        print ("%S:%s"%(threadName, time.ctime(time.time())))
        counter -= 1

threadLock = threading.Lock()
threads = []

thread = myThread(1, "thread-1", 1)
thread = myThread(1, "thread-2", 2)

threads.append(thread1)
threads.append(thread2)

for t in threads:
    t.join()

print("exit main process")


